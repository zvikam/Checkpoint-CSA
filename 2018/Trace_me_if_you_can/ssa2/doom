func doom(aa []int, bb []int) int:
0:
	t0 = len(aa)
	t1 = t0 / 2:int
	jump 3
1:
	t2 = &aa[t7]
	t3 = *t2
	t4 = t3 == 0:int
	if t4 goto 4 else 5
2:
	t5 = len(aa)
	t6 = t5 - 1:int
	jump 8
3:
	t7 = phi [0: t1, 5: t10] #ii
	t8 = t7 >= 0:int
	if t8 goto 1 else 2
4:
	t9 = &aa[t7]
	*t9 = 0:int
	jump 5
5:
	t10 = t7 - 1:int
	jump 3
6:
	t11 = &aa[t17]
	t12 = *t11
	t13 = t12 > 0:int
	if t13 goto 9 else 10
7:
	t14 = phi [8: nil:[]int, 9: t20] #m
	t15 = len(bb)
	t16 = t15 - 1:int
	jump 13
8:
	t17 = phi [2: t6, 10: t21] #i
	t18 = t17 >= 0:int
	if t18 goto 6 else 7
9:
	t19 = t17 + 1:int
	t20 = slice aa[:t19]
	jump 7
10:
	t21 = t17 - 1:int
	jump 8
11:
	t22 = &bb[t29]
	t23 = *t22
	t24 = t23 > 0:int
	if t24 goto 14 else 15
12:
	t25 = phi [13: nil:[]int, 14: t32] #f
	t26 = len(t14)
	t27 = len(t25)
	t28 = t26 > t27
	if t28 goto 16 else 17
13:
	t29 = phi [7: t16, 15: t33] #i
	t30 = t29 >= 0:int
	if t30 goto 11 else 12
14:
	t31 = t29 + 1:int
	t32 = slice bb[:t31]
	jump 12
15:
	t33 = t29 - 1:int
	jump 13
16:
	return 1:int
17:
	t34 = len(t14)
	t35 = len(t25)
	t36 = t34 < t35
	if t36 goto 18 else 19
18:
	return -1:int
19:
	t37 = len(t14)
	t38 = t37 - 1:int
	jump 22
20:
	t39 = &t14[t44]
	t40 = *t39
	t41 = &t25[t44]
	t42 = *t41
	t43 = t40 > t42
	if t43 goto 23 else 24
21:
	return -2:int
22:
	t44 = phi [19: t38, 26: t51] #i
	t45 = t44 >= 0:int
	if t45 goto 20 else 21
23:
	return 1:int
24:
	t46 = &t14[t44]
	t47 = *t46
	t48 = &t25[t44]
	t49 = *t48
	t50 = t47 < t49
	if t50 goto 25 else 26
25:
	return -1:int
26:
	t51 = t44 - 1:int
	jump 22

